@using System.IO;
@using Newtonsoft.Json;
@using Microsoft.Extensions.Options;
@model SearchEquipmentViewModel
@{
    ViewData["Title"] = "未拍卖设备";
}
@section stylesheet {
    <link href="~/lib/ion-rangeslider/css/ion.rangeSlider.min.css" media="all" rel="stylesheet" type="text/css"/>
}

<div class="bodyinfo row text-dark">
    <div class="condition">
        
    </div>
    <div class="info d-flex">
        @await Html.PartialAsync("_AuctionInfoPartial", Model,
                                        new ViewDataDictionary(ViewData){})
        
    </div>
</div>


@section script {
    <script src="~/lib/ion-rangeslider/js/ion.rangeSlider.min.js"></script>
    <script>
        function searchEquipments(){
            $.ajax({
                type: "get",
                url: "@Url.Action("NoAuction")",
                data: $("form").serialize(),
                success: function (response) {
                    $(".info").html("");
                    $(".info").html(response);
                    $('#mydiv').html($(response).find('#something').html());
                    $(response).filter('script').each(function(){
                        $.globalEval(this.text || this.textContent || this.innerHTML || '');
                    });
                }
            });
        }

        function addRemoveElement(parentNode, chipElementId, resetValue){
            var span = document.createElement("span");
                span.className ="closebtn";
                span.innerHTML = "&times;";
                span.onclick = function(e){
                    var elem = document.getElementById(chipElementId);
                    elem.parentNode.removeChild(elem);
                    if(resetValue.length == 0){
                        resetValue();
                    }else{
                        resetValue(chipElementId.split("-chip")[0])
                    }
                    searchEquipments();
                }
            parentNode.appendChild(span);
        }

        function addOrUpdateChip(resetValue, ...args){
            var existChip = document.getElementById(args[0]);
            
            if(existChip) {
                if(args.length == 3 ){
                    existChip.innerText = args[1] + "—" + args[2];
                } else {
                    existChip.innerText = args[1];
                }
                addRemoveElement(existChip, args[0], resetValue);
            } else {            
                var chip = document.createElement("div");
                    chip.className = "chip";
                    chip.id = args[0].toString();
                if(args.length == 3 ){
                    chip.innerHTML = args[1] + "—" + args[2];
                }else{
                    chip.innerHTML = args[1];
                }
                addRemoveElement(chip, args[0], resetValue);
                document.getElementsByClassName("condition")[0].appendChild(chip);
            }  
            //searchEquipments();
        }
        
        var bindCheckBox = function(){
            //$("#models-form-group").find("input[type='checkbox']:visible").each(function(i, ele){
            $(".search input[type='checkbox']:visible").each(function(i, ele){
                $(document).on("change", "#" + $(ele).attr("id"), function(){
                    var chipId = $(this).attr("id") + "-chip";
                    if($(this).is(':checked')){
                        var checkboxArrayId = $(this).attr("id").split("_").slice(0,2).join("_");  
                        var hiddenInputId = checkboxArrayId + "__Name";
                        var valueInput = $("#" + hiddenInputId);
                        
                        //addOrUpdateChip(resetCheckboxStatus, chipId, valueInput.val());
                        searchEquipments();
                    }else{
                        $("#" + chipId).remove();
                        searchEquipments();
                    }
                    
                })
            });
        };
        function resetCheckboxStatus(id){
            $("#" + id.toString()).prop('checked', false);     
        }
        bindCheckBox();

        $(document).on("click", ".order-ul .list-inline-item", function(){
            var className = "text-warning";
            var $orderBys = $(this).find(".order-by");
            if($orderBys.length > 0){
                if($(this).find("p").hasClass(className)){
                    $orderBys.toggleClass("d-none");
                }
                var $showOrderBy = $(this).find(".order-by:visible");
                $("#Sort_Field").val($orderBys.first().data("order-by"));
                if($showOrderBy.data("direction") == "desc"){
                    $("#Sort_Direction").val("desc");
                }else{
                    $("#Sort_Direction").val("asc");
                }
            }else{
                $("#Sort_Field").val("");
                $("#Sort_Direction").val("");
            }

            $(".order-ul .list-inline-item").find("p").removeClass(className);
            $(this).find("p").addClass(className);
            
            searchEquipments();
        });
        
    </script>
    @{ await Html.RenderPartialAsync("_SliderScriptsPartial"); }
}