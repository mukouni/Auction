@using System.IO;
@using Auction.Entities.Enums
@using Newtonsoft.Json;
@using Microsoft.Extensions.Options;
@model EquipmentViewModel
@{
    ViewData["Title"] = "修改设备";
    ViewData["Action"] = "Update";
    Layout = "_ManageLayout";
}
@section stylesheet {
    <link href="~/lib/bootstrap-fileinput/css/fileinput.min.css" media="all" rel="stylesheet" type="text/css"/>
    <link href="~/lib/bootstrap-fileinput/themes/explorer-fas/theme.css" media="all" rel="stylesheet" type="text/css"/>
}   
    <div class="container my-4">
        <h4>@ViewData["Title"]</h4>
        <hr />
        <div class="row">
            <div class="col-lg-6">
                @await Html.PartialAsync("_EquipmentFormPartial", Model,
                                new ViewDataDictionary(ViewData){})
            </div>
        
            <div class="col-lg-6">
                <form enctype="multipart/form-data" class="mb-3">
                    <label asp-for="CoverPhoto"></label>
                    <div class="file-loading">
                        <input id="equipmentCoverPhotoInput" name="photo" type="file" class="photo" multiple>
                    </div>
                </form>

                <form enctype="multipart/form-data" class="mb-3">
                    <label asp-for="ExteriorPhotos"></label>
                    <div class="file-loading">
                        <input id="equipmentExteriorPhotosInput" name="photo" type="file" class="photo" multiple>
                    </div>
                </form>

                <form enctype="multipart/form-data" class="mb-3">
                    <label asp-for="TrackedChassisPhotos"></label>
                    <div class="file-loading">
                        <input id="equipmentTrackedChassisPhotosInput" name="photo" type="file" class="photo" multiple>
                    </div>
                </form>

                <form enctype="multipart/form-data" class="mb-3">
                    <label asp-for="CabPhotos"></label>
                    <div class="file-loading">
                        <input id="equipmentCabPhotosInput" name="photo" type="file" class="photo" multiple>
                    </div>
                </form>

                <form enctype="multipart/form-data" class="mb-3">
                    <label asp-for="BoomPhotos"></label>
                    <div class="file-loading">
                        <input id="equipmentBoomPhotosInput" name="photo" type="file" class="photo" multiple>
                    </div>
                </form>

                <form enctype="multipart/form-data" class="mb-3">
                    <label asp-for="EnginePhotos"></label>
                    <div class="file-loading">
                        <input id="equipmentEnginePhotosInput" name="photo" type="file" class="photo" multiple>
                    </div>
                </form>
            </div>
        </div>
    </div>
@{
    var CoverPhotoJson = JsonConvert.SerializeObject(new{Model.CoverPhoto});
    var ExteriorPhotosJson = JsonConvert.SerializeObject(Model.ExteriorPhotos.OrderBy(p => p.Ranking).ThenBy(p => p.LastUpdatedAt));
    var TrackedChassisPhotosJson = JsonConvert.SerializeObject(Model.TrackedChassisPhotos.OrderBy(p => p.Ranking).ThenBy(p => p.LastUpdatedAt));
    var CabPhotosJson = JsonConvert.SerializeObject(Model.CabPhotos.OrderBy(p => p.Ranking).ThenBy(p => p.LastUpdatedAt));
    var BoomPhotosJson = JsonConvert.SerializeObject(Model.BoomPhotos.OrderBy(p => p.Ranking).ThenBy(p => p.LastUpdatedAt));
    var EnginePhotosJson = JsonConvert.SerializeObject(Model.EnginePhotos.OrderBy(p => p.Ranking).ThenBy(p => p.LastUpdatedAt));
    var CoverPhotoName =  Model.CoverPhoto?.FileName;
}
@section script {
    <script src="~/lib/bootstrap-fileinput/js/plugins/sortable.js" type="text/javascript"></script>
    <script src="~/lib/bootstrap-fileinput/js/fileinput.js" type="text/javascript"></script>
    <script src="~/lib/bootstrap-fileinput/js/locales/zh.js" type="text/javascript"></script>
    <script src="~/lib/bootstrap-fileinput/themes/fas/theme.min.js" type="text/javascript"></script>
    <script src="~/lib/bootstrap-fileinput/themes/explorer-fas/theme.js" type="text/javascript"></script>
    <script>
        $(document).ready(function () {
            // var photo = @Html.Raw(ExteriorPhotosJson);
            
            // var initialPreview = []
            // var initialPreviewConfig = []
            // var newPhotos = []

            // addData(photo)

            // // {'X-XSRF-TOKEN': cookieUtil.getItem("XSRF-TOKEN")}
            // var $fileInput = $("#equipmentPhotoInput")
            // $fileInput.fileinput({
            //     "language": 'zh',
            //     "theme": 'explorer-fas',
            //     uploadUrl: "@Url.Action("UploadPhotoAsync")",
            //     ajaxSettings: {
            //         beforeSend: function(xhr) {
            //             xhr.setRequestHeader('X-XSRF-TOKEN', cookieUtil.getItem("XSRF-TOKEN"));
            //         }
            //     },
            //     uploadExtraData: {
            //         '__RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val(),
            //         'EquipmentId': '@Model.Id',
            //         'PhotoType': $('input#PhotoType').val()
            //     },
            //     allowedFileTypes: ["image"],
            //     overwriteInitial: false,
            //     initialPreviewAsData: true,
            //     initialPreview: initialPreview,
            //     initialPreviewConfig: initialPreviewConfig
            // }).on("filebatchselected", function(event, files) {
                
            //     //$fileInput.fileinput("upload");
            // }).on('filepreupload', function(event, data, previewId, index) {
            //     //data.form.append('IsHiddenAfterSold', $("input#" + previewId).is(":checked"))
            // }).on("fileuploaded", function (event, data, previewId, index) {
            //     addData([data.response])
                
            //     if(data.response.Message == "操作成功"){
            //         var caption = $("#" + previewId).find(".explorer-caption")
            //         caption.attr("title", data.response.Data.FileName)
            //         caption.text(data.response.Data.FileName)
            //         $('input:checkbox[name="IsHiddenAfterSold"]:visible').on("click", SetHiddenPhototAfterSold)
            //     }
            //     newPhotos.push({
            //         PreviewId: previewId,
            //         FileName:  data.response.Data.FileName,
            //         PhotoId: data.response.Data.Id
            //     })
            // }).on('filesorted', function(event, params) {
            // }).on('filebatchpreupload', function(event, data, jqXHR) {
            // }).on("filesuccessremove", function (event, id, fileindex) { 
            //     var previewId = $("#"+id).data("previewid")
            //     $.each(newPhotos, function(i, p){
            //         if(p.PreviewId == previewId){
            //             $.ajax({
            //                 type: "post",
            //                 url: "@Url.Action("DeletePhoto")",
            //                 data: { photoName: p.FileName },
            //                 success: function(result){
            //                     if(result.Message == "操作成功"){
            //                         delete newPhotos[i]
            //                     }
            //                 }
            //             });
            //         }
            //     })
            // });

            // function addData(photo){
            //     $.each(photo, function(i, p){
            //         var photo     = { extra: {} }
            //         photo.caption = p.FileName
            //         photo.size    = p.FileSize
            //         photo.key     = p.Id
            //         photo.width   = "120px"
            //         photo.url     = "@Url.Action("DeletePhoto")"
            //         photo.extra.photoName = p.FileName
                    
            //         initialPreview.push(p.RequestPath)
            //         initialPreviewConfig.push(photo)
            //     });
            // }

            
            // var SetHiddenPhototAfterSold = function(){
            //     var that = $(this)
            //     var photoName = that.closest("tr").find(".explorer-caption").attr("title")
            //     $.ajax({
            //         type: "post",
            //         url: "@Url.Action("SetHiddenPhototAfterSold")",
            //         data: { photoName: photoName, equipmentId: "@Model.Id" },
            //         success: function(result){
            //         }
            //     })
            // }
            // $('input:checkbox[name="IsHiddenAfterSold"]:visible').on("click", SetHiddenPhototAfterSold);

            // (function selectHiddenPhototCheckbox(){
            //     var coverPhotoName = "@CoverPhotoName"
            //     $.each()
            //     $(".explorer-caption[title='@CoverPhotoName']")
            //         .closest("tr")
            //         .find('input:checkbox[name="IsHiddenAfterSold"]:visible')
            //         .attr('checked', true)
            // })()
            
            var uploadPhoto = new UploadPhoto();
            uploadPhoto.uploadUrl           = "@Url.Action("UploadPhotoAsync")"
            uploadPhoto.deleteUrl           = "@Url.Action("DeletePhoto")"
            uploadPhoto.setHiddenPhototUrl  = "@Url.Action("SetHiddenPhototAfterSold")"
            uploadPhoto.modelId             = "@Model.Id"
            uploadPhoto.initInput("#equipmentCoverPhotoInput",  @Html.Raw(CoverPhotoJson), "Cover")
            uploadPhoto.initInput("#equipmentExteriorPhotosInput",  @Html.Raw(ExteriorPhotosJson), "Exterior")
            uploadPhoto.initInput("#equipmentTrackedChassisPhotosInput",  @Html.Raw(TrackedChassisPhotosJson), "TrackedChassis")
            uploadPhoto.initInput("#equipmentCabPhotosInput",  @Html.Raw(CabPhotosJson), "Cab")
            uploadPhoto.initInput("#equipmentBoomPhotosInput",  @Html.Raw(BoomPhotosJson), "Boom")
            uploadPhoto.initInput("#equipmentEnginePhotosInput",  @Html.Raw(EnginePhotosJson), "Engine")
            uploadPhoto.bindCheckbox()

            $(document).ready(function(){
                $(".search .nav-link[href='/equipment/index']").addClass("active");
            })
        })
    </script>
}