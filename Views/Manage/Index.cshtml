@model ApplicationUserViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
@{
    ViewData["Title"] = "用户设置";
    Layout = "_ManageLayout";
}
<input type="hidden" id="RequestVerificationToken" 
       name="RequestVerificationToken" value="@GetAntiXsrfRequestToken()">
<div class="col-md-6  float-left">
    <label>@Html.DisplayNameFor(model => Model.UserName)</label>:
    <span>
        @Html.DisplayFor(modelItem => modelItem.UserName)
    </span>
</div>
<div class="col-md-6  float-left">
    <label>@Html.DisplayNameFor(model => Model.PhoneNumber)</label>:
    <span>
        @Html.DisplayFor(modelItem => modelItem.PhoneNumber)
    </span>
</div>
<div class="col-md-6  float-left">
    <label>@Html.DisplayNameFor(model => Model.RealName)</label>:
    <span>
        @Html.DisplayFor(modelItem => modelItem.RealName)
    </span>
</div>
<div class="col-md-6  float-left">
    <label>@Html.DisplayNameFor(model => Model.Role)</label>:
    <span>
        @if(Model.Role == ApplicationRole.Member){
            @Html.Raw("会员")
        }else if(Model.Role == ApplicationRole.Guest){
            @Html.Raw("普通用户")
        }else{
            @Html.DisplayFor(modelItem => Model.Role)
        }
    </span>
</div>
<div class="col-md-6  float-left">
    <label>@Html.DisplayNameFor(model => Model.DeadlineAt)</label>:
    <span>
        @if(@Model.Role != ApplicationRole.Admin && @Model.Role != ApplicationRole.Staff)
        {
            @if(@Model.DeadlineAt == DateTime.MinValue)
            {
               <button class="btn btn-info" disabled="true">已提交申请成为会员</button>
            } else if(@Model.DeadlineAt < DateTime.Now || @Model.DeadlineAt == null)
            {
                 @Html.DisplayFor(modelItem => modelItem.DeadlineAt)<button class="btn btn-info" onclick="applicationMembers(this, '@Model.Id')">申请为会员</button>
            } else
            {
                @Html.DisplayFor(modelItem => modelItem.DeadlineAt)
            }
        }
        else
        {
            @Html.DisplayFor(modelItem => modelItem.DeadlineAt)
        }
    </span>
</div>
    @*
    <h4>Change your account settings</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>Password:</dt>
        <dd>
            @if (Model.HasPassword)
            {
                <text>[&nbsp;&nbsp;<a asp-controller="Manage" asp-action="ChangePassword">Change</a>&nbsp;&nbsp;]</text>
            }
            else
            {
                <text>[&nbsp;&nbsp;<a asp-controller="Manage" asp-action="SetPassword">Create</a>&nbsp;&nbsp;]</text>
            }
        </dd>
        <dt>External Logins:</dt>
        <dd>
            @Model.Logins.Count [&nbsp;&nbsp;<a asp-controller="Manage" asp-action="ManageLogins">Manage</a>&nbsp;&nbsp;]
        </dd>
        <dt>Phone Number:</dt>
        <dd>
            <p>
                Phone Numbers can used as a second factor of verification in two-factor authentication.
                See <a href="http://go.microsoft.com/fwlink/?LinkID=532713">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication using SMS.
            </p>
            @(Model.PhoneNumber ?? "None")
                @if (Model.PhoneNumber != null)
                {
                    <br />
                    <text>[&nbsp;&nbsp;<a asp-controller="Manage" asp-action="AddPhoneNumber">Change</a>&nbsp;&nbsp;]</text>
                    <form asp-controller="Manage" asp-action="RemovePhoneNumber" method="post" role="form">
                        [<button type="submit" class="btn-link">Remove</button>]
                    </form>
                }
                else
                {
                    <text>[&nbsp;&nbsp;<a asp-controller="Manage" asp-action="AddPhoneNumber">Add</a>&nbsp;&nbsp;]</text>
                }
        </dd>

        <dt>Two-Factor Authentication:</dt>
        <dd>
            <!--<p>
                There are no two-factor authentication providers configured. See <a href="http://go.microsoft.com/fwlink/?LinkID=532713">this article</a>
                for setting up this application to support two-factor authentication.
            </p>-->
            @if (Model.TwoFactor)
                {
                    <form asp-controller="Manage" asp-action="DisableTwoFactorAuthentication" method="post" class="form-horizontal" role="form">
                        Enabled [<button type="submit" class="btn-link">Disable</button>]
                    </form>
                }
                else
                {
                    <form asp-controller="Manage" asp-action="EnableTwoFactorAuthentication" method="post" class="form-horizontal" role="form">
                        [<button type="submit" class="btn-link">Enable</button>] Disabled
                    </form>
                }
        </dd>
        <dt>Authentication App:</dt>
        <dd>
            @if (Model.AuthenticatorKey == null)
            {
                <form asp-controller="Manage" asp-action="ResetAuthenticatorKey" method="post" class="form-horizontal" role="form">
                    Generate [<button type="submit" class="btn-link">Generate</button>]
                </form>
            }
            else
            {
                <text>Your key is: @Model.AuthenticatorKey</text>
                <form asp-controller="Manage" asp-action="GenerateRecoveryCode" method="post" class="form-horizontal" role="form">
                    Generate [<button type="submit" class="btn-link">Generate new recovery codes</button>]
                </form>
            }
        </dd>
    </dl>
</div>
*@