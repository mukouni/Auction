// <auto-generated />
using System;
using Auction.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Auction.Migrations
{
    [DbContext(typeof(AuctionDbContext))]
    [Migration("20190228081123_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Auction.Entities.Equipment", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("AuctionHouse")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid?>("CreatedByUserGuid");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DealPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("DealPriceRMB")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("Height");

                    b.Property<int?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("IsPurchase")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IsSold")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("LastUpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("Long");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedByUserGuid");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ProductionDate");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<double?>("Weight");

                    b.Property<int?>("Width");

                    b.Property<DateTime?>("WorkingTime");

                    b.HasKey("Guid");

                    b.ToTable("ac_equipment");
                });

            modelBuilder.Entity("Auction.Entities.LoginLogging", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<Guid?>("CreatedByUserGuid");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ip");

                    b.Property<int?>("IsDelete");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<Guid?>("ModifiedByUserGuid");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Platform");

                    b.Property<Guid?>("UserGuid");

                    b.HasKey("Guid");

                    b.HasIndex("UserGuid");

                    b.ToTable("st_login_log");
                });

            modelBuilder.Entity("Auction.Entities.Photo", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid?>("CreatedByUserGuid");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("EquipmentPhotoGuid");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FileSize");

                    b.Property<int?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<bool?>("IsHome")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastUpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid?>("ModifiedByUserGuid");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OriginName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Ranking");

                    b.Property<string>("StoreDir")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Guid");

                    b.HasIndex("EquipmentPhotoGuid");

                    b.ToTable("ac_photo");
                });

            modelBuilder.Entity("Auction.Entities.User", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("AvatorPath")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid?>("CreatedByUserGuid");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(800)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int?>("IsLocked")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("LastLoginAt");

                    b.Property<string>("LastLoginIp");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LoginName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedByUserGuid");

                    b.Property<string>("ModifiedByUserName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RealName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserRole")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.HasKey("Guid");

                    b.ToTable("st_user");
                });

            modelBuilder.Entity("Auction.Entities.LoginLogging", b =>
                {
                    b.HasOne("Auction.Entities.User", "User")
                        .WithMany("LoginLogging")
                        .HasForeignKey("UserGuid");
                });

            modelBuilder.Entity("Auction.Entities.Photo", b =>
                {
                    b.HasOne("Auction.Entities.Equipment", "EquipmentPhoto")
                        .WithMany("Photos")
                        .HasForeignKey("EquipmentPhotoGuid");
                });
#pragma warning restore 612, 618
        }
    }
}
